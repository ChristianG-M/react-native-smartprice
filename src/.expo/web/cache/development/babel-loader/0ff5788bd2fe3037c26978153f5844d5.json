{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerAppUser = exports.getDeviceToken = exports.getMemberInformation = exports.isRegisteredUser = exports.sendVerificationCodeRequest = exports.registerUser = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _dateParser = require(\"../utils/parsers/date-parser\");\n\nvar _phoneParser = require(\"../utils/parsers/phone-parser\");\n\nvar _expoConstants = _interopRequireDefault(require(\"expo-constants\"));\n\nvar API_URL = 'https://myrx.io/api/v1';\nvar TEST_API_URL = 'https://test.myrx.io/api/v1';\nvar buildTarget = _expoConstants.default.manifest.extra;\n\nvar registerUser = function registerUser(form) {\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : buildTarget.target;\n  var url = env === 'test' ? TEST_API_URL : API_URL;\n  var dob = (0, _dateParser.getDateOfBirth)(form.dateOfBirth);\n  var phone = (0, _phoneParser.getPhoneNumber)(form.phoneNumber);\n  if (!dob || !phone) return null;\n  return new Promise(function (resolve, reject) {\n    _axios.default.post(url + \"/smart-price/register\", {\n      firstName: form.firstName,\n      lastName: form.lastName,\n      email: form.email,\n      dateOfBirth: dob,\n      phoneNumber: phone,\n      verifyCode: form.verifyCode\n    }).then(function (resp) {\n      resolve(resp.data);\n    }).catch(function (error) {\n      reject(error.response.data.details.errors);\n    });\n  });\n};\n\nexports.registerUser = registerUser;\n\nvar sendVerificationCodeRequest = function sendVerificationCodeRequest(phoneNumberRequest) {\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : buildTarget.target;\n  var url = env === 'test' ? TEST_API_URL : API_URL;\n  var phoneNumber = (0, _phoneParser.getPhoneNumber)(phoneNumberRequest);\n  return new Promise(function (resolve, reject) {\n    _axios.default.post(url + \"/one-time-password/send\", {\n      phoneNumber: phoneNumber\n    }).then(function (resp) {\n      resolve(resp.data);\n    }).catch(function (error) {\n      reject(error.response.data.message);\n    });\n  });\n};\n\nexports.sendVerificationCodeRequest = sendVerificationCodeRequest;\n\nvar isRegisteredUser = function isRegisteredUser(deviceToken) {\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : buildTarget.target;\n  var url = env === 'test' ? TEST_API_URL : API_URL;\n  return new Promise(function (resolve, reject) {\n    _axios.default.get(url + \"/smart-price/verify-user\", {\n      headers: {\n        'x-prescryptive-device-token': deviceToken\n      }\n    }).then(function (resp) {\n      resolve(resp.data);\n    }).catch(function (error) {\n      reject(error.response.data.details.errors);\n    });\n  });\n};\n\nexports.isRegisteredUser = isRegisteredUser;\n\nvar getMemberInformation = function getMemberInformation(deviceToken) {\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : buildTarget.target;\n  var url = env === 'test' ? TEST_API_URL : API_URL;\n  return new Promise(function (resolve, reject) {\n    _axios.default.get(url + \"/smart-price/get-smartprice-member-info\", {\n      headers: {\n        'x-prescryptive-device-token': deviceToken\n      }\n    }).then(function (resp) {\n      resolve(resp.data);\n    }).catch(function (error) {\n      reject(error.response.data.details.errors);\n    });\n  });\n};\n\nexports.getMemberInformation = getMemberInformation;\n\nvar getDeviceToken = function getDeviceToken(code, phoneNumber) {\n  var env = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : buildTarget.target;\n  var url = env === 'test' ? TEST_API_URL : API_URL;\n  var phone = (0, _phoneParser.getPhoneNumber)(phoneNumber);\n  return new Promise(function (resolve, reject) {\n    _axios.default.post(url + \"/one-time-password/verify\", {\n      code: code,\n      phoneNumber: phone\n    }).then(function (resp) {\n      resolve(resp.data);\n    }).catch(function (error) {\n      reject(error.response.data.details.errors);\n    });\n  });\n};\n\nexports.getDeviceToken = getDeviceToken;\n\nvar registerAppUser = function registerAppUser(form, deviceToken) {\n  var env = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : buildTarget.target;\n  var url = env === 'test' ? TEST_API_URL : API_URL;\n  var dob = (0, _dateParser.getDateOfBirth)(form.dateOfBirth);\n  var phone = (0, _phoneParser.getPhoneNumber)(form.phoneNumber);\n  if (!dob || !phone) return null;\n  return new Promise(function (resolve, reject) {\n    _axios.default.post(url + \"/smart-price/app-register\", {\n      firstName: form.firstName,\n      lastName: form.lastName,\n      email: form.email,\n      dateOfBirth: dob,\n      phoneNumber: phone\n    }, {\n      headers: {\n        'x-prescryptive-device-token': deviceToken\n      }\n    }).then(function (resp) {\n      resolve(resp.data);\n    }).catch(function (error) {\n      reject(error.response.data);\n    });\n  });\n};\n\nexports.registerAppUser = registerAppUser;","map":{"version":3,"sources":["/Users/willhwang/Desktop/react-native-smartprice/src/src/component/api/smartprice-api.ts"],"names":["API_URL","TEST_API_URL","buildTarget","Constants","manifest","extra","registerUser","form","env","target","url","dob","dateOfBirth","phone","phoneNumber","Promise","resolve","reject","axios","post","firstName","lastName","email","verifyCode","then","resp","data","catch","error","response","details","errors","sendVerificationCodeRequest","phoneNumberRequest","message","isRegisteredUser","deviceToken","get","headers","getMemberInformation","getDeviceToken","code","registerAppUser"],"mappings":"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","sourcesContent":["// Copyright 2021 Prescryptive Health, Inc.\n\nimport axios from 'axios';\nimport { getDateOfBirth } from '../utils/parsers/date-parser';\nimport { getPhoneNumber } from '../utils/parsers/phone-parser';\nimport Constants from 'expo-constants';\n\nconst API_URL = 'https://myrx.io/api/v1';\nconst TEST_API_URL = 'https://test.myrx.io/api/v1';\n\nconst buildTarget = Constants.manifest.extra as BuildTarget;\nexport interface BuildTarget {\n  target: string;\n}\nexport interface IApiResponseError {\n  response: {\n    data: {\n      details: Record<string, unknown>;\n      status: string;\n      message?: string;\n    };\n  };\n}\n\nexport interface IMemberInformation {\n  carrierPCN: string;\n  memberId: string;\n  rxBin: string;\n  rxGroup: string;\n  deviceToken?: string;\n}\n\nexport interface IMemberInfoResponse {\n  data: IMemberInformation | boolean;\n  message: string;\n  status: string;\n}\n\nexport interface IFormData {\n  dateOfBirth: string;\n  phoneNumber: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  verifyCode?: string;\n}\n\nexport interface IDeviceTokenResponse {\n  data: { deviceToken: string };\n  message: string;\n  responseCode: number;\n  status: string;\n}\n\nexport const registerUser = (\n  form: IFormData,\n  env = buildTarget.target\n): Promise<IMemberInfoResponse> | null => {\n  const url = env === 'test' ? TEST_API_URL : API_URL;\n  const dob = getDateOfBirth(form.dateOfBirth);\n  const phone = getPhoneNumber(form.phoneNumber);\n  if (!dob || !phone) return null;\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${url}/smart-price/register`, {\n        firstName: form.firstName,\n        lastName: form.lastName,\n        email: form.email,\n        dateOfBirth: dob,\n        phoneNumber: phone,\n        verifyCode: form.verifyCode,\n      })\n      .then((resp) => {\n        resolve(resp.data);\n      })\n      .catch((error: IApiResponseError) => {\n        reject(error.response.data.details.errors);\n      });\n  });\n};\n\nexport const sendVerificationCodeRequest = (\n  phoneNumberRequest: string,\n  env = buildTarget.target\n): Promise<unknown> => {\n  const url = env === 'test' ? TEST_API_URL : API_URL;\n  const phoneNumber = getPhoneNumber(phoneNumberRequest);\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${url}/one-time-password/send`, {\n        phoneNumber,\n      })\n      .then((resp) => {\n        resolve(resp.data);\n      })\n      .catch((error: IApiResponseError) => {\n        reject(error.response.data.message);\n      });\n  });\n};\n\nexport const isRegisteredUser = (\n  deviceToken: string,\n  env = buildTarget.target\n): Promise<IMemberInfoResponse> => {\n  const url = env === 'test' ? TEST_API_URL : API_URL;\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${url}/smart-price/verify-user`, {\n        headers: {\n          'x-prescryptive-device-token': deviceToken,\n        },\n      })\n      .then((resp) => {\n        resolve(resp.data);\n      })\n      .catch((error: IApiResponseError) => {\n        reject(error.response.data.details.errors);\n      });\n  });\n};\n\nexport const getMemberInformation = (\n  deviceToken: string,\n  env = buildTarget.target\n): Promise<IMemberInfoResponse> => {\n  const url = env === 'test' ? TEST_API_URL : API_URL;\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${url}/smart-price/get-smartprice-member-info`, {\n        headers: {\n          'x-prescryptive-device-token': deviceToken,\n        },\n      })\n      .then((resp) => {\n        resolve(resp.data);\n      })\n      .catch((error: IApiResponseError) => {\n        reject(error.response.data.details.errors);\n      });\n  });\n};\n\nexport const getDeviceToken = (\n  code: string,\n  phoneNumber: string,\n  env = buildTarget.target\n): Promise<IDeviceTokenResponse> => {\n  const url = env === 'test' ? TEST_API_URL : API_URL;\n  const phone = getPhoneNumber(phoneNumber);\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${url}/one-time-password/verify`, {\n        code,\n        phoneNumber: phone,\n      })\n      .then((resp) => {\n        resolve(resp.data);\n      })\n      .catch((error: IApiResponseError) => {\n        reject(error.response.data.details.errors);\n      });\n  });\n};\n\nexport const registerAppUser = (\n  form: IFormData,\n  deviceToken: string,\n  env = buildTarget.target\n): Promise<IMemberInfoResponse> | null => {\n  const url = env === 'test' ? TEST_API_URL : API_URL;\n  const dob = getDateOfBirth(form.dateOfBirth);\n  const phone = getPhoneNumber(form.phoneNumber);\n  if (!dob || !phone) return null;\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        `${url}/smart-price/app-register`,\n        {\n          firstName: form.firstName,\n          lastName: form.lastName,\n          email: form.email,\n          dateOfBirth: dob,\n          phoneNumber: phone,\n        },\n        {\n          headers: {\n            'x-prescryptive-device-token': deviceToken,\n          },\n        }\n      )\n      .then((resp) => {\n        resolve(resp.data);\n      })\n      .catch((error: IApiResponseError) => {\n        reject(error.response.data);\n      });\n  });\n};\n"]},"metadata":{},"sourceType":"script"}