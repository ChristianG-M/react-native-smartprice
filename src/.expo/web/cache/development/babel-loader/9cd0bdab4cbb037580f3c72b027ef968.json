{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmartpriceButton = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _TouchableHighlight = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableHighlight\"));\n\nvar _smartpriceButton = require(\"./smartprice-button.styles\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/willhwang/Desktop/react-native-smartprice/src/src/component/buttons/smartprice-button/smartprice-button.tsx\";\n\nvar SmartpriceButton = function SmartpriceButton(_ref) {\n  var backgroundColor = _ref.backgroundColor,\n      color = _ref.color,\n      label = _ref.label,\n      isDisabled = _ref.isDisabled,\n      onPress = _ref.onPress;\n  var bgColor = backgroundColor ? {\n    backgroundColor: backgroundColor\n  } : {};\n  var labelColor = color ? {\n    color: color\n  } : {};\n  var disabledStyle = isDisabled ? {\n    opacity: 0.5\n  } : {};\n  return _react.default.createElement(_TouchableHighlight.default, {\n    onPress: onPress,\n    style: [_smartpriceButton.smartpriceButtonStyles.containerViewStyle, bgColor, disabledStyle],\n    disabled: isDisabled,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Text.default, {\n    style: [_smartpriceButton.smartpriceButtonStyles.labelTextStyle, labelColor],\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, label));\n};\n\nexports.SmartpriceButton = SmartpriceButton;","map":{"version":3,"sources":["/Users/willhwang/Desktop/react-native-smartprice/src/src/component/buttons/smartprice-button/smartprice-button.tsx"],"names":["SmartpriceButton","backgroundColor","color","label","isDisabled","onPress","bgColor","labelColor","disabledStyle","opacity","smartpriceButtonStyles","containerViewStyle","labelTextStyle"],"mappings":";;;;;;;AACA;;;;;;AAEA;;;;;AAWO,IAAMA,gBAA2D,GAAG,SAA9DA,gBAA8D,OAMjD;AAAA,MALxBC,eAKwB,QALxBA,eAKwB;AAAA,MAJxBC,KAIwB,QAJxBA,KAIwB;AAAA,MAHxBC,KAGwB,QAHxBA,KAGwB;AAAA,MAFxBC,UAEwB,QAFxBA,UAEwB;AAAA,MADxBC,OACwB,QADxBA,OACwB;AACxB,MAAMC,OAAO,GAAGL,eAAe,GAAG;AAAEA,IAAAA,eAAe,EAAfA;AAAF,GAAH,GAAyB,EAAxD;AACA,MAAMM,UAAU,GAAGL,KAAK,GAAG;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAH,GAAe,EAAvC;AACA,MAAMM,aAAa,GAAGJ,UAAU,GAAG;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAAH,GAAsB,EAAtD;AACA,SACE,6BAAC,2BAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,KAAK,EAAE,CACLK,yCAAuBC,kBADlB,EAELL,OAFK,EAGLE,aAHK,CAFT;AAOE,IAAA,QAAQ,EAAEJ,UAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,6BAAC,aAAD;AAAM,IAAA,KAAK,EAAE,CAACM,yCAAuBE,cAAxB,EAAwCL,UAAxC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,CATF,CADF;AAeD,CAzBM","sourcesContent":["// Copyright 2021 Prescryptive Health, Inc.\nimport React, { FunctionComponent } from 'react';\nimport { Text, ViewStyle, StyleProp, TouchableHighlight } from 'react-native';\nimport { smartpriceButtonStyles } from './smartprice-button.styles';\n\nexport interface ISmartpriceButtonProps {\n  viewStyle?: StyleProp<ViewStyle>;\n  backgroundColor?: string;\n  color?: string;\n  label?: string;\n  isDisabled?: boolean;\n  onPress: () => void;\n}\n\nexport const SmartpriceButton: FunctionComponent<ISmartpriceButtonProps> = ({\n  backgroundColor,\n  color,\n  label,\n  isDisabled,\n  onPress,\n}): React.ReactElement => {\n  const bgColor = backgroundColor ? { backgroundColor } : {};\n  const labelColor = color ? { color } : {};\n  const disabledStyle = isDisabled ? { opacity: 0.5 } : {};\n  return (\n    <TouchableHighlight\n      onPress={onPress}\n      style={[\n        smartpriceButtonStyles.containerViewStyle,\n        bgColor,\n        disabledStyle,\n      ]}\n      disabled={isDisabled}\n    >\n      <Text style={[smartpriceButtonStyles.labelTextStyle, labelColor]}>\n        {label}\n      </Text>\n    </TouchableHighlight>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}