{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PhoneNumberFormatter = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar PhoneNumberFormatter = function () {\n  function PhoneNumberFormatter() {\n    (0, _classCallCheck2.default)(this, PhoneNumberFormatter);\n  }\n\n  (0, _createClass2.default)(PhoneNumberFormatter, null, [{\n    key: \"clean\",\n    value: function clean() {\n      var phoneNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return phoneNumber.replace(/[^0-9]+/g, '');\n    }\n  }, {\n    key: \"formatForApi\",\n    value: function formatForApi(phoneNumber) {\n      var cleanedPhoneNumber = PhoneNumberFormatter.clean(phoneNumber);\n      var areaCode = '+1';\n      return cleanedPhoneNumber ? \"\" + areaCode + cleanedPhoneNumber : '';\n    }\n  }, {\n    key: \"formatForUI\",\n    value: function formatForUI() {\n      var phoneNumberString = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var phoneNumberRegex = /^1?(\\d{3})(\\d{3})(\\d{4})$/;\n      var cleanedString = phoneNumberString.replace(/\\D/g, '');\n      var matchedPhoneNumber = phoneNumberRegex.exec(cleanedString);\n      return matchedPhoneNumber ? \"(\" + matchedPhoneNumber[1] + \") \" + matchedPhoneNumber[2] + \"-\" + matchedPhoneNumber[3] : '';\n    }\n  }]);\n  return PhoneNumberFormatter;\n}();\n\nexports.PhoneNumberFormatter = PhoneNumberFormatter;","map":{"version":3,"sources":["/Users/willhwang/Desktop/react-native-smartprice/src/src/component/utils/formatters/phone-number.formatter.ts/phone-number.formatter.ts"],"names":["PhoneNumberFormatter","phoneNumber","replace","cleanedPhoneNumber","clean","areaCode","phoneNumberString","phoneNumberRegex","cleanedString","matchedPhoneNumber","exec"],"mappings":";;;;;;;;;;;IAEaA,oB;;;;;;;WACX,iBAA8C;AAAA,UAA1BC,WAA0B,uEAAZ,EAAY;AAC5C,aAAOA,WAAW,CAACC,OAAZ,CAAoB,UAApB,EAAgC,EAAhC,CAAP;AACD;;;WAED,sBAA2BD,WAA3B,EAAwD;AACtD,UAAME,kBAAkB,GAAGH,oBAAoB,CAACI,KAArB,CAA2BH,WAA3B,CAA3B;AACA,UAAMI,QAAQ,GAAG,IAAjB;AAEA,aAAOF,kBAAkB,QAAME,QAAN,GAAiBF,kBAAjB,GAAwC,EAAjE;AACD;;;WAED,uBAA0D;AAAA,UAAhCG,iBAAgC,uEAAZ,EAAY;AACxD,UAAMC,gBAAgB,GAAG,2BAAzB;AACA,UAAMC,aAAa,GAAGF,iBAAiB,CAACJ,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,CAAtB;AACA,UAAMO,kBAAkB,GAAGF,gBAAgB,CAACG,IAAjB,CAAsBF,aAAtB,CAA3B;AACA,aAAOC,kBAAkB,SACjBA,kBAAkB,CAAC,CAAD,CADD,UACSA,kBAAkB,CAAC,CAAD,CAD3B,SACkCA,kBAAkB,CAAC,CAAD,CADpD,GAErB,EAFJ;AAGD","sourcesContent":["// Copyright 2020 Prescryptive Health, Inc.\n\nexport class PhoneNumberFormatter {\n  public static clean(phoneNumber = ''): string {\n    return phoneNumber.replace(/[^0-9]+/g, '');\n  }\n\n  public static formatForApi(phoneNumber: string): string {\n    const cleanedPhoneNumber = PhoneNumberFormatter.clean(phoneNumber);\n    const areaCode = '+1';\n\n    return cleanedPhoneNumber ? `${areaCode}${cleanedPhoneNumber}` : '';\n  }\n\n  public static formatForUI(phoneNumberString = ''): string {\n    const phoneNumberRegex = /^1?(\\d{3})(\\d{3})(\\d{4})$/;\n    const cleanedString = phoneNumberString.replace(/\\D/g, '');\n    const matchedPhoneNumber = phoneNumberRegex.exec(cleanedString);\n    return matchedPhoneNumber\n      ? `(${matchedPhoneNumber[1]}) ${matchedPhoneNumber[2]}-${matchedPhoneNumber[3]}`\n      : '';\n  }\n}\n"]},"metadata":{},"sourceType":"script"}