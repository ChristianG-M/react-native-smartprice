{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderErrorNode = exports.BaseInput = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _TextInput = _interopRequireDefault(require(\"react-native-web/dist/exports/TextInput\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _baseInput = require(\"./base-input.styles\");\n\nrequire(\"@expo/match-media\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/willhwang/Desktop/react-native-smartprice/src/src/component/inputs/base-input/base-input.tsx\";\n\nvar BaseInput = function BaseInput(props) {\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      focusStyle = _useState2[0],\n      setFocusStyle = _useState2[1];\n\n  var value = props.value,\n      textStyle = props.textStyle,\n      isDisabled = props.isDisabled,\n      keyboardType = props.keyboardType,\n      onChangeText = props.onChangeText,\n      placeholder = props.placeholder,\n      errorMessage = props.errorMessage,\n      errorMessageStyle = props.errorMessageStyle,\n      containerStyle = props.containerStyle,\n      secureTextEntry = props.secureTextEntry,\n      maxLength = props.maxLength;\n\n  var onFocus = function onFocus() {\n    return setFocusStyle(_baseInput.baseInputStyles.focusTextStyle);\n  };\n\n  var onBlur = function onBlur() {\n    return setFocusStyle(_baseInput.baseInputStyles.blurTextStyle);\n  };\n\n  var errorStyle = (0, _extends2.default)({}, _baseInput.baseInputStyles.errorMessageTextStyle, errorMessageStyle);\n  var hasError = renderErrorNode(errorMessage, errorStyle);\n  var invalidStyle = errorMessage && _baseInput.baseInputStyles.errorTextStyle;\n  return _react.default.createElement(_View.default, {\n    style: containerStyle,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_TextInput.default, {\n    value: value,\n    style: [_baseInput.baseInputStyles.textStyle, textStyle, focusStyle, invalidStyle],\n    keyboardType: keyboardType,\n    onChangeText: onChangeText,\n    placeholder: placeholder,\n    editable: !isDisabled,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    secureTextEntry: secureTextEntry,\n    maxLength: maxLength,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), hasError);\n};\n\nexports.BaseInput = BaseInput;\n\nvar renderErrorNode = function renderErrorNode(errorMessage, style) {\n  if (errorMessage !== undefined || errorMessage !== '') {\n    return _react.default.createElement(_Text.default, {\n      style: style,\n      __self: _this,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, errorMessage);\n  }\n\n  return null;\n};\n\nexports.renderErrorNode = renderErrorNode;","map":{"version":3,"sources":["/Users/willhwang/Desktop/react-native-smartprice/src/src/component/inputs/base-input/base-input.tsx"],"names":["BaseInput","props","focusStyle","setFocusStyle","value","textStyle","isDisabled","keyboardType","onChangeText","placeholder","errorMessage","errorMessageStyle","containerStyle","secureTextEntry","maxLength","onFocus","baseInputStyles","focusTextStyle","onBlur","blurTextStyle","errorStyle","errorMessageTextStyle","hasError","renderErrorNode","invalidStyle","errorTextStyle","style","undefined"],"mappings":";;;;;;;;;;;;;AAEA;;;;;;;;AASA;;AACA;;;;;AAgBO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA0C;AAAA,kBAC7B,qBAAS,EAAT,CAD6B;AAAA;AAAA,MAC1DC,UAD0D;AAAA,MAC9CC,aAD8C;;AAAA,MAG/DC,KAH+D,GAc7DH,KAd6D,CAG/DG,KAH+D;AAAA,MAI/DC,SAJ+D,GAc7DJ,KAd6D,CAI/DI,SAJ+D;AAAA,MAK/DC,UAL+D,GAc7DL,KAd6D,CAK/DK,UAL+D;AAAA,MAM/DC,YAN+D,GAc7DN,KAd6D,CAM/DM,YAN+D;AAAA,MAO/DC,YAP+D,GAc7DP,KAd6D,CAO/DO,YAP+D;AAAA,MAQ/DC,WAR+D,GAc7DR,KAd6D,CAQ/DQ,WAR+D;AAAA,MAS/DC,YAT+D,GAc7DT,KAd6D,CAS/DS,YAT+D;AAAA,MAU/DC,iBAV+D,GAc7DV,KAd6D,CAU/DU,iBAV+D;AAAA,MAW/DC,cAX+D,GAc7DX,KAd6D,CAW/DW,cAX+D;AAAA,MAY/DC,eAZ+D,GAc7DZ,KAd6D,CAY/DY,eAZ+D;AAAA,MAa/DC,SAb+D,GAc7Db,KAd6D,CAa/Da,SAb+D;;AAgBjE,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMZ,aAAa,CAACa,2BAAgBC,cAAjB,CAAnB;AAAA,GAAhB;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMf,aAAa,CAACa,2BAAgBG,aAAjB,CAAnB;AAAA,GAAf;;AACA,MAAMC,UAAqB,8BACtBJ,2BAAgBK,qBADM,EAErBV,iBAFqB,CAA3B;AAKA,MAAMW,QAAQ,GAAGC,eAAe,CAACb,YAAD,EAAeU,UAAf,CAAhC;AACA,MAAMI,YAAY,GAAGd,YAAY,IAAIM,2BAAgBS,cAArD;AAEA,SACE,6BAAC,aAAD;AAAM,IAAA,KAAK,EAAEb,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AACE,IAAA,KAAK,EAAER,KADT;AAEE,IAAA,KAAK,EAAE,CAACY,2BAAgBX,SAAjB,EAA4BA,SAA5B,EAAuCH,UAAvC,EAAmDsB,YAAnD,CAFT;AAGE,IAAA,YAAY,EAAEjB,YAHhB;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,QAAQ,EAAE,CAACH,UANb;AAOE,IAAA,OAAO,EAAES,OAPX;AAQE,IAAA,MAAM,EAAEG,MARV;AASE,IAAA,eAAe,EAAEL,eATnB;AAUE,IAAA,SAAS,EAAEC,SAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGQ,QAbH,CADF;AAiBD,CA3CM;;;;AA6CA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAC7Bb,YAD6B,EAE7BgB,KAF6B,EAGf;AACd,MAAIhB,YAAY,KAAKiB,SAAjB,IAA8BjB,YAAY,KAAK,EAAnD,EAAuD;AACrD,WAAO,6BAAC,aAAD;AAAM,MAAA,KAAK,EAAEgB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBhB,YAArB,CAAP;AACD;;AACD,SAAO,IAAP;AACD,CARM","sourcesContent":["// Copyright 2020 Prescryptive Health, Inc.\n\nimport React, { useState, ReactElement, ReactNode } from 'react';\nimport {\n  StyleProp,\n  TextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n  Text,\n} from 'react-native';\nimport { baseInputStyles } from './base-input.styles';\nimport '@expo/match-media';\n\nexport interface IBaseInputProps {\n  value?: string;\n  isDisabled?: boolean;\n  keyboardType?: 'numeric' | 'default';\n  onChangeText?: (value: string) => void;\n  placeholder?: string;\n  textStyle?: StyleProp<TextStyle>;\n  errorMessage?: string;\n  errorMessageStyle?: StyleProp<TextStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  secureTextEntry?: boolean;\n  maxLength?: number;\n}\n\nexport const BaseInput = (props: IBaseInputProps): ReactElement => {\n  const [focusStyle, setFocusStyle] = useState({});\n  const {\n    value,\n    textStyle,\n    isDisabled,\n    keyboardType,\n    onChangeText,\n    placeholder,\n    errorMessage,\n    errorMessageStyle,\n    containerStyle,\n    secureTextEntry,\n    maxLength,\n  } = props;\n\n  const onFocus = () => setFocusStyle(baseInputStyles.focusTextStyle);\n  const onBlur = () => setFocusStyle(baseInputStyles.blurTextStyle);\n  const errorStyle: TextStyle = {\n    ...baseInputStyles.errorMessageTextStyle,\n    ...(errorMessageStyle as TextStyle),\n  };\n\n  const hasError = renderErrorNode(errorMessage, errorStyle);\n  const invalidStyle = errorMessage && baseInputStyles.errorTextStyle;\n\n  return (\n    <View style={containerStyle}>\n      <TextInput\n        value={value}\n        style={[baseInputStyles.textStyle, textStyle, focusStyle, invalidStyle]}\n        keyboardType={keyboardType}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        editable={!isDisabled}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        secureTextEntry={secureTextEntry}\n        maxLength={maxLength}\n      />\n      {hasError}\n    </View>\n  );\n};\n\nexport const renderErrorNode = (\n  errorMessage?: string,\n  style?: TextStyle\n): ReactNode => {\n  if (errorMessage !== undefined || errorMessage !== '') {\n    return <Text style={style}>{errorMessage}</Text>;\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"script"}