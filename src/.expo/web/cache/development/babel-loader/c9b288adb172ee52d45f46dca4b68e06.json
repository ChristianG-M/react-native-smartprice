{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmartPrice = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/dist/exports/Dimensions\"));\n\nvar _smartpriceButton = require(\"./buttons/smartprice-button/smartprice-button\");\n\nvar _smartpriceModal = require(\"./modal/smartprice-modal\");\n\nvar _index = require(\"./index.styles\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/willhwang/Desktop/react-native-smartprice/src/src/component/index.tsx\";\n\nvar SmartPrice = function SmartPrice(_ref) {\n  var buttonLabel = _ref.buttonLabel,\n      onContinueFlow = _ref.onContinueFlow;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      position = _useState4[0],\n      setPosition = _useState4[1];\n\n  var componentRef = _react.default.createRef();\n\n  var label = buttonLabel != null ? buttonLabel : 'Get the SmartPRICE™';\n  var visibilityStyle = isOpen ? {\n    display: 'flex'\n  } : {\n    display: 'none'\n  };\n\n  var slideScreen = function slideScreen() {\n    if (componentRef.current) {\n      componentRef.current.measure(function (_fx, _fy, _width, _height, px, py) {\n        setPosition({\n          left: -px,\n          top: -py\n        });\n      });\n      setIsOpen(true);\n    }\n  };\n\n  var closeScreen = function closeScreen() {\n    setIsOpen(false);\n  };\n\n  var modalSize = function modalSize() {\n    return _Dimensions.default.get('window');\n  };\n\n  var modalStyle = [modalSize(), _StyleSheet.default.absoluteFillObject, _index.smartPriceStyles.containerViewStyle, position, visibilityStyle];\n  return _react.default.createElement(_View.default, {\n    ref: componentRef,\n    style: _index.smartPriceStyles.buttonWrapperViewStyle,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_smartpriceButton.SmartpriceButton, {\n    onPress: slideScreen,\n    label: label,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_smartpriceModal.SmartpriceModal, {\n    onClose: closeScreen,\n    viewStyle: modalStyle,\n    isOpen: isOpen,\n    onContinueFlow: onContinueFlow,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexports.SmartPrice = SmartPrice;","map":{"version":3,"sources":["/Users/willhwang/Desktop/react-native-smartprice/src/src/component/index.tsx"],"names":["SmartPrice","buttonLabel","onContinueFlow","isOpen","setIsOpen","position","setPosition","componentRef","React","createRef","label","visibilityStyle","display","slideScreen","current","measure","_fx","_fy","_width","_height","px","py","left","top","closeScreen","modalSize","Dimensions","get","modalStyle","StyleSheet","absoluteFillObject","smartPriceStyles","containerViewStyle","buttonWrapperViewStyle"],"mappings":";;;;;;;;;;;AACA;;;;;;;;AAEA;;AACA;;AACA;;;;;AAOO,IAAMA,UAA+C,GAAG,SAAlDA,UAAkD,OAGrC;AAAA,MAFxBC,WAEwB,QAFxBA,WAEwB;AAAA,MADxBC,cACwB,QADxBA,cACwB;;AAAA,kBACI,qBAAkB,KAAlB,CADJ;AAAA;AAAA,MACjBC,MADiB;AAAA,MACTC,SADS;;AAAA,mBAEQ,sBAFR;AAAA;AAAA,MAEjBC,QAFiB;AAAA,MAEPC,WAFO;;AAGxB,MAAMC,YAAY,GAAGC,eAAMC,SAAN,EAArB;;AAEA,MAAMC,KAAK,GAAGT,WAAH,WAAGA,WAAH,GAAkB,qBAA7B;AAEA,MAAMU,eAA0B,GAAGR,MAAM,GACrC;AAAES,IAAAA,OAAO,EAAE;AAAX,GADqC,GAErC;AAAEA,IAAAA,OAAO,EAAE;AAAX,GAFJ;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIN,YAAY,CAACO,OAAjB,EAA0B;AACxBP,MAAAA,YAAY,CAACO,OAAb,CAAqBC,OAArB,CAA6B,UAACC,GAAD,EAAMC,GAAN,EAAWC,MAAX,EAAmBC,OAAnB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAuC;AAClEf,QAAAA,WAAW,CAAC;AAAEgB,UAAAA,IAAI,EAAE,CAACF,EAAT;AAAaG,UAAAA,GAAG,EAAE,CAACF;AAAnB,SAAD,CAAX;AACD,OAFD;AAGAjB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAPD;;AASA,MAAMoB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBpB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,MAAMqB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,WAAOC,oBAAWC,GAAX,CAAe,QAAf,CAAP;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,CACjBH,SAAS,EADQ,EAEjBI,oBAAWC,kBAFM,EAGjBC,wBAAiBC,kBAHA,EAIjB3B,QAJiB,EAKjBM,eALiB,CAAnB;AAQA,SACE,6BAAC,aAAD;AAAM,IAAA,GAAG,EAAEJ,YAAX;AAAyB,IAAA,KAAK,EAAEwB,wBAAiBE,sBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kCAAD;AAAkB,IAAA,OAAO,EAAEpB,WAA3B;AAAwC,IAAA,KAAK,EAAEH,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,gCAAD;AACE,IAAA,OAAO,EAAEc,WADX;AAEE,IAAA,SAAS,EAAEI,UAFb;AAGE,IAAA,MAAM,EAAEzB,MAHV;AAIE,IAAA,cAAc,EAAED,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD,CAlDM","sourcesContent":["// Copyright 2021 Prescryptive Health, Inc.\nimport React, { FunctionComponent, useState } from 'react';\nimport { View, ViewStyle, StyleSheet, Dimensions } from 'react-native';\nimport { SmartpriceButton } from './buttons/smartprice-button/smartprice-button';\nimport { SmartpriceModal } from './modal/smartprice-modal';\nimport { smartPriceStyles } from './index.styles';\n\nexport interface ISmartPriceProps {\n  buttonLabel?: string;\n  onContinueFlow?: () => void;\n}\n\nexport const SmartPrice: FunctionComponent<ISmartPriceProps> = ({\n  buttonLabel,\n  onContinueFlow,\n}): React.ReactElement => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [position, setPosition] = useState<ViewStyle>();\n  const componentRef = React.createRef<View>();\n\n  const label = buttonLabel ?? 'Get the SmartPRICE™';\n\n  const visibilityStyle: ViewStyle = isOpen\n    ? { display: 'flex' }\n    : { display: 'none' };\n\n  const slideScreen = () => {\n    if (componentRef.current) {\n      componentRef.current.measure((_fx, _fy, _width, _height, px, py) => {\n        setPosition({ left: -px, top: -py });\n      });\n      setIsOpen(true);\n    }\n  };\n\n  const closeScreen = () => {\n    setIsOpen(false);\n  };\n\n  const modalSize = () => {\n    return Dimensions.get('window');\n  };\n\n  const modalStyle = [\n    modalSize(),\n    StyleSheet.absoluteFillObject,\n    smartPriceStyles.containerViewStyle,\n    position,\n    visibilityStyle,\n  ];\n\n  return (\n    <View ref={componentRef} style={smartPriceStyles.buttonWrapperViewStyle}>\n      <SmartpriceButton onPress={slideScreen} label={label} />\n      <SmartpriceModal\n        onClose={closeScreen}\n        viewStyle={modalStyle}\n        isOpen={isOpen}\n        onContinueFlow={onContinueFlow}\n      />\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}